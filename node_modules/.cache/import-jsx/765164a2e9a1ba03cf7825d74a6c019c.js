'use strict';

const React = require('react');

const {
  useState
} = require('react');

const {
  Text,
  Box
} = require('ink');

const FIELD_SIZE = 16;
const FIELD_ROW = [...new Array(FIELD_SIZE).keys()];
let foodItem = {
  x: Math.floor(Math.random() * FIELD_SIZE),
  y: Math.floor(Math.random() * FIELD_SIZE)
};

function getItem(x, y, snakeSegents) {
  if (foodItem.x === x && foodItem.y === y) {
    return /*#__PURE__*/React.createElement(Text, {
      color: "red"
    }, "\u25A0");
  }

  for (const segment of snakeSegents) {
    if (segment.x === x && segment.y === y) {
      return /*#__PURE__*/React.createElement(Text, {
        color: "green"
      }, "\u25A0");
    }
  }
}

const App = () => {
  const [snakeSegents, setSnakeSegments] = useState([{
    x: 8,
    y: 8
  }, {
    x: 8,
    y: 7
  }, {
    x: 8,
    y: 6
  }]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(Text, {
    color: "green"
  }, "Snake"), " game"), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, FIELD_ROW.map(y => /*#__PURE__*/React.createElement(Box, {
    key: y
  }, FIELD_ROW.map(x => /*#__PURE__*/React.createElement(Box, {
    key: x
  }, getItem(x, y, snakeSegents) || ' . '))))));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZVN0YXRlIiwiVGV4dCIsIkJveCIsIkZJRUxEX1NJWkUiLCJGSUVMRF9ST1ciLCJBcnJheSIsImtleXMiLCJmb29kSXRlbSIsIngiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ5IiwiZ2V0SXRlbSIsInNuYWtlU2VnZW50cyIsInNlZ21lbnQiLCJBcHAiLCJzZXRTbmFrZVNlZ21lbnRzIiwibWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBZUQsT0FBTyxDQUFDLE9BQUQsQ0FBNUI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQSxJQUFGO0FBQVFDLEVBQUFBO0FBQVIsSUFBZ0JILE9BQU8sQ0FBQyxLQUFELENBQTdCOztBQUdBLE1BQU1JLFVBQVUsR0FBRyxFQUFuQjtBQUNBLE1BQU1DLFNBQVMsR0FBRyxDQUFDLEdBQUcsSUFBSUMsS0FBSixDQUFVRixVQUFWLEVBQXNCRyxJQUF0QixFQUFKLENBQWxCO0FBRUEsSUFBSUMsUUFBUSxHQUFHO0FBQ2RDLEVBQUFBLENBQUMsRUFBRUMsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQlIsVUFBM0IsQ0FEVztBQUVkUyxFQUFBQSxDQUFDLEVBQUVILElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JSLFVBQTNCO0FBRlcsQ0FBZjs7QUFLQSxTQUFTVSxPQUFULENBQWtCTCxDQUFsQixFQUFxQkksQ0FBckIsRUFBd0JFLFlBQXhCLEVBQXNDO0FBQ3JDLE1BQUtQLFFBQVEsQ0FBQ0MsQ0FBVCxLQUFlQSxDQUFmLElBQW9CRCxRQUFRLENBQUNLLENBQVQsS0FBZUEsQ0FBeEMsRUFBMkM7QUFDMUMsd0JBQU8sb0JBQUMsSUFBRDtBQUFNLE1BQUEsS0FBSyxFQUFDO0FBQVosZ0JBQVA7QUFDQTs7QUFDRCxPQUFNLE1BQU1HLE9BQVosSUFBdUJELFlBQXZCLEVBQXFDO0FBQ3BDLFFBQUlDLE9BQU8sQ0FBQ1AsQ0FBUixLQUFjQSxDQUFkLElBQW1CTyxPQUFPLENBQUNILENBQVIsS0FBY0EsQ0FBckMsRUFBd0M7QUFDdkMsMEJBQU8sb0JBQUMsSUFBRDtBQUFNLFFBQUEsS0FBSyxFQUFDO0FBQVosa0JBQVA7QUFDQTtBQUNEO0FBQ0Q7O0FBRUQsTUFBTUksR0FBRyxHQUFHLE1BQU07QUFFakIsUUFBTSxDQUFDRixZQUFELEVBQWVHLGdCQUFmLElBQW1DakIsUUFBUSxDQUFDLENBQ2pEO0FBQUNRLElBQUFBLENBQUMsRUFBQyxDQUFIO0FBQU1JLElBQUFBLENBQUMsRUFBQztBQUFSLEdBRGlELEVBRWpEO0FBQUNKLElBQUFBLENBQUMsRUFBQyxDQUFIO0FBQU1JLElBQUFBLENBQUMsRUFBQztBQUFSLEdBRmlELEVBR2pEO0FBQUNKLElBQUFBLENBQUMsRUFBQyxDQUFIO0FBQU1JLElBQUFBLENBQUMsRUFBQztBQUFSLEdBSGlELENBQUQsQ0FBakQ7QUFPQSxzQkFDQyxvQkFBQyxHQUFEO0FBQUssSUFBQSxhQUFhLEVBQUMsUUFBbkI7QUFBNEIsSUFBQSxVQUFVLEVBQUM7QUFBdkMsa0JBQ0Msb0JBQUMsSUFBRCxxQkFDQyxvQkFBQyxJQUFEO0FBQU0sSUFBQSxLQUFLLEVBQUM7QUFBWixhQURELFVBREQsZUFJQyxvQkFBQyxHQUFEO0FBQUssSUFBQSxhQUFhLEVBQUM7QUFBbkIsS0FDRVIsU0FBUyxDQUFDYyxHQUFWLENBQWNOLENBQUMsaUJBQ2Ysb0JBQUMsR0FBRDtBQUFLLElBQUEsR0FBRyxFQUFFQTtBQUFWLEtBQ0VSLFNBQVMsQ0FBQ2MsR0FBVixDQUFjVixDQUFDLGlCQUNmLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEdBQUcsRUFBRUE7QUFBVixLQUFlSyxPQUFPLENBQUNMLENBQUQsRUFBR0ksQ0FBSCxFQUFLRSxZQUFMLENBQVAsSUFBNkIsS0FBNUMsQ0FEQSxDQURGLENBREEsQ0FERixDQUpELENBREQ7QUFnQkEsQ0F6QkQ7O0FBMkJBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyB1c2VTdGF0ZSB9ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgVGV4dCwgQm94IH0gPSByZXF1aXJlKCdpbmsnKTtcblxuXG5jb25zdCBGSUVMRF9TSVpFID0gMTY7XG5jb25zdCBGSUVMRF9ST1cgPSBbLi4ubmV3IEFycmF5KEZJRUxEX1NJWkUpLmtleXMoKV07XG5cbmxldCBmb29kSXRlbSA9IHtcblx0eDogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogRklFTERfU0laRSksXG5cdHk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIEZJRUxEX1NJWkUpLFxufVxuXG5mdW5jdGlvbiBnZXRJdGVtICh4LCB5LCBzbmFrZVNlZ2VudHMpIHtcblx0aWYgKCBmb29kSXRlbS54ID09PSB4ICYmIGZvb2RJdGVtLnkgPT09IHkpIHtcblx0XHRyZXR1cm4gPFRleHQgY29sb3I9XCJyZWRcIj7ilqA8L1RleHQ+XG5cdH1cblx0Zm9yICggY29uc3Qgc2VnbWVudCBvZiBzbmFrZVNlZ2VudHMpIHtcblx0XHRpZiAoc2VnbWVudC54ID09PSB4ICYmIHNlZ21lbnQueSA9PT0geSkge1xuXHRcdFx0cmV0dXJuIDxUZXh0IGNvbG9yPVwiZ3JlZW5cIj7ilqA8L1RleHQ+XG5cdFx0fVxuXHR9XG59XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblxuXHRjb25zdCBbc25ha2VTZWdlbnRzLCBzZXRTbmFrZVNlZ21lbnRzXSA9IHVzZVN0YXRlKFtcblx0XHR7eDo4LCB5Ojh9LFxuXHRcdHt4OjgsIHk6N30sXG5cdFx0e3g6OCwgeTo2fSxcblx0XSlcblxuXG5cdHJldHVybiAoXG5cdFx0PEJveCBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nIGFsaWduSXRlbXM9J2NlbnRlcic+XG5cdFx0XHQ8VGV4dD5cblx0XHRcdFx0PFRleHQgY29sb3I9XCJncmVlblwiPlNuYWtlPC9UZXh0PiBnYW1lXG5cdFx0PC9UZXh0PlxuXHRcdFx0PEJveCBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nPlxuXHRcdFx0XHR7RklFTERfUk9XLm1hcCh5ID0+IChcblx0XHRcdFx0XHQ8Qm94IGtleT17eX0+XG5cdFx0XHRcdFx0XHR7RklFTERfUk9XLm1hcCh4ID0+IChcblx0XHRcdFx0XHRcdFx0PEJveCBrZXk9e3h9ID57Z2V0SXRlbSh4LHksc25ha2VTZWdlbnRzKSB8fCAnIC4gJ308L0JveD5cblx0XHRcdFx0XHRcdCkpfVxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQpKX1cblx0XHRcdDwvQm94PlxuXHRcdDwvQm94PlxuXHQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcblxuXG5cbiJdfQ==